CREATE SCHEMA IF NOT EXISTS SALES_ORDER_ENTITY_GROUP;

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_STATUS (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_REASON_CATEGORY (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.RENEWAL_TERM (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER (
  TOTAL_PENDING_BILLING_AMOUNT INTEGER,
  CHECKOUT_DATE DATE,
  PRICE_CALCULATION_STATUS_MESSAGE_TEXT VARCHAR(500),
  CONFIRMATION_RECIPIENT_EMAIL_TEXT VARCHAR(500) NOT NULL,
  ORDER_END_DATE DATE,
  IS_TAX_EXEMPT BOOLEAN,
  TOTAL_PRODUCT_TAX_AMOUNT INTEGER,
  IS_ALERTED BOOLEAN,
  IS_ANONYMOUS BOOLEAN,
  DESCRIPTION VARCHAR(500) NOT NULL,
  ACTIVATED_DATE DATE,
  REQUESTED_START_DATE DATE NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  COMPANY_AUTHORIZED_DATE DATE,
  ORDER_INSURANCE_AMOUNT INTEGER,
  NAME VARCHAR(500) NOT NULL,
  IS_CLOSED BOOLEAN,
  TOTAL_DELIVERY_AMOUNT INTEGER,
  CUSTOMER_AUTHORIZED_DATE DATE,
  TOTAL_CANCELLED_BILLING_AMOUNT INTEGER,
  TOTAL_ADJUSTED_DELIVERY_TAX_AMOUNT INTEGER,
  TOTAL_ADJUSTMENT_AMOUNT INTEGER,
  RENEWAL_UPLIFT_RATE INTEGER,
  TOTAL_PRODUCT_AMOUNT INTEGER,
  TOTAL_ADJUSTMENT_TAX_AMOUNT INTEGER,
  IS_GIFT_ORDER BOOLEAN,
  PROMISE_FULFILLMENT_DATE DATE,
  FILED_DATE DATE,
  I_SO_CULTURE VARCHAR(500),
  PURCHASE_ORDER_NUMBER VARCHAR(500),
  TOTAL_DELIVERY_FEE_AMOUNT INTEGER,
  TOTAL_DELIVERY_TAX_AMOUNT INTEGER,
  TOTAL_TAX_AMOUNT INTEGER,
  ORDER_NUMBER VARCHAR(500) NOT NULL,
  FULFILLED_DATE DATE,
  PAID_DATE DATE,
  TOTAL_BOOKING_AMOUNT INTEGER,
  ADJUSTED_PRODUCT_TAX_AMOUNT INTEGER,
  PROMISE_DATE DATE,
  PACKED_DATE DATE,
  IS_HISTORICAL_ONLY BOOLEAN,
  GRAND_TOTAL_AMOUNT INTEGER,
  IS_CONTRACTED BOOLEAN,
  CAN_BILL_NOW BOOLEAN,
  ADJUSTED_TOTAL_PRODUCT_AMOUNT INTEGER,
  ORDER_DISCOUNT INTEGER,
  ORDER_START_DATE DATE,
  CANCEL_DATE_TYPE VARCHAR(500),
  IS_REDUCTION_ORDER BOOLEAN,
  SALES_ORDER_SYSTEM_STATUS VARCHAR(500),
  IS_SUSPENDED BOOLEAN,
  PURCHASE_ORDER_DATE DATE,
  BILLING_DAY_OF_THE_MONTH INTEGER,
  CANCEL_DATE DATE,
  TAX_RATE INTEGER,
  DEVELOPER_STATUS_CODE VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_SUMMARY (
  AUTHORIZATION_REVERSAL_AMOUNT INTEGER,
  AUTHORIZATION_AMOUNT INTEGER,
  UNAPPLIED_AMOUNT INTEGER,
  PAYMENT_AMOUNT INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  APPLIED_AMOUNT INTEGER,
  AVAILABLE_TO_APPLY_BALANCE_AMOUNT INTEGER,
  CAPTURED_AMOUNT INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRICE_ADJUSTMENT_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_TAX (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  SALES_ORDER_TAX_AMOUNT INTEGER,
  TAX_ADDRESS_CITY_NAME VARCHAR(500),
  TAX_ERROR_MESSAGE_TEXT VARCHAR(500),
  TAX_ADDRESS_STREET1_TEXT VARCHAR(500),
  TAX_RATE_PERCENT INTEGER NOT NULL,
  TAX_ADDRESS_STREET2_TEXT VARCHAR(500),
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_NOTE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NOTE_TEXT VARCHAR(500) NOT NULL,
  DESCRIPTION VARCHAR(500),
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT (
  TOTAL_RECURRING_PRICE_AMOUNT INTEGER,
  TOTAL_LINE_ADJUSTMENT_AMOUNT INTEGER,
  TOTAL_PRICE_AMOUNT INTEGER NOT NULL,
  PROVISIONING_DATE DATE,
  FULFILLED_QUANTITY INTEGER,
  TOTAL_LINE_AMOUNT INTEGER,
  PROMISED_DATE DATE,
  RECURRING_PRICE_AMOUNT INTEGER,
  END_DATE DATE,
  GIFT_ORDER_MESSAGE_TEXT VARCHAR(500),
  QUANTITY_ORDERED_UO_M VARCHAR(500) NOT NULL,
  TOTAL_PRODUCT_TAX_AMOUNT INTEGER,
  LINE_ADJUSTMENT_SUB_TOTAL_AMOUNT INTEGER,
  COMMENT_TEXT VARCHAR(500),
  ORDER_PRODUCT_NUMBER VARCHAR(500) NOT NULL,
  DESCRIPTION VARCHAR(500) NOT NULL,
  ORDERED_QUANTITY INTEGER NOT NULL,
  UNIT_PRICE_AMOUNT INTEGER,
  REQUESTED_START_DATE DATE,
  ID VARCHAR(36) UNIQUE NOT NULL,
  SUBSCRIPTION_RENEWAL_MONTH_QUANTITY INTEGER,
  ORDER_MANUAL_ADJUSTMENT_SUB_TOTAL_AMOUNT INTEGER,
  ALLOCATED_QUANTITY INTEGER,
  ALLOCATION_PARTITION_NAME VARCHAR(500),
  IS_GIFT BOOLEAN,
  UNIT_TAX_AMOUNT INTEGER,
  DELIVERY_TAX_AMOUNT INTEGER,
  IS_BONUS_PRODUCT BOOLEAN,
  SALES_ORDER_PRODUCT_ADJUSTED_TAX_AMOUNT INTEGER,
  TOTAL_ADJUSTMENT_AMOUNT INTEGER,
  SHIPPING_TAX_AMOUNT INTEGER,
  TOTAL_LIST_PRICE_AMOUNT INTEGER,
  TOTAL_ADJUSTMENT_TAX_AMOUNT INTEGER,
  ORDER_ADJUSTMENT_SUB_TOTAL_AMOUNT INTEGER,
  SUBSCRIPTION_TERM_QUANTITY INTEGER,
  TOTAL_DISTRIBUTED_ADJUSTMENT_TAX_AMOUNT INTEGER,
  TOTAL_DISTRIBUTED_TAX_AMOUNT INTEGER,
  TOTAL_TAX_AMOUNT INTEGER,
  ADJUSTED_DELIVERY_TAX_AMOUNT INTEGER,
  LIST_PRICE_AMOUNT INTEGER,
  SEGMENT_INDEX INTEGER,
  SHIPPING_COST_AMOUNT INTEGER,
  IS_BUNDLE_ROOT BOOLEAN,
  DISCOUNT_AMOUNT INTEGER,
  CANCELLED_QUANTITY INTEGER,
  LIST_PRICE_QUANTITY_UO_M VARCHAR(500) NOT NULL,
  TOTAL_DISTRIBUTED_ADJUSTMENT_AMOUNT INTEGER,
  SEGMENT_INDEX_NUMBER INTEGER,
  TOTAL_UNIT_PRICE_AMOUNT INTEGER,
  AVAILABLE_QUANTITY INTEGER,
  REQUESTED_END_DATE DATE,
  ALLOCATION_GROUP_NAME VARCHAR(500),
  GIFT_RECIPIENT_TELEPHONE_NUMBER VARCHAR(500),
  IS_AUTOMATICALLY_RENEWED BOOLEAN,
  DISCOUNT_PERCENT INTEGER,
  TOTAL_MANUAL_ADJUSTMENT_AMOUNT INTEGER,
  HANDLING_COST_AMOUNT INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRICE_ADJUSTMENT (
  ID VARCHAR(36) UNIQUE NOT NULL,
  TOTAL_ADJUSTMENT_TAX_AMOUNT INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_STATUS (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_GROUP (
  ID VARCHAR(36) UNIQUE NOT NULL,
  DESCRIPTION VARCHAR(500) NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.PRODUCT_RELATIONSHIP_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  PARENT_PRODUCT_ROLE VARCHAR(500) NOT NULL,
  CHILD_PRODUCT_ROLE VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_GROUP_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CONFIRMATION_STATUS (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_TYPE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  SALES_ORDER_CHANGE_TYPE_NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.PRICE_ADJUSTMENT_METHOD (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_REASON (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.ORDER_DELIVERY_METHOD (
  ID VARCHAR(36) UNIQUE NOT NULL,
  EXTERNAL_RECORD VARCHAR(500) NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX (
  DESCRIPTION VARCHAR(500) NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  TAX_EFFECTIVE_DATE DATE,
  TAX_AMOUNT INTEGER NOT NULL,
  SALES_ORDER_TAX_AMOUNT INTEGER,
  TAX_ADDRESS_CITY_NAME VARCHAR(500),
  TAX_ERROR_MESSAGE_TEXT VARCHAR(500),
  TAX_ADDRESS_STREET1_TEXT VARCHAR(500),
  TAX_RATE_PERCENT INTEGER NOT NULL,
  TAX_ADDRESS_STREET2_TEXT VARCHAR(500),
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.PRICE_ADJUSTMENT_GROUP (
  PRICE_ADJUSTMENT_GROUP_ID VARCHAR(36) UNIQUE NOT NULL,
  PRIMARY KEY (PRICE_ADJUSTMENT_GROUP_ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP (
  TOTAL_PRICE_AMOUNT INTEGER NOT NULL,
  TOTAL_DELIVERY_ADJUSTMENT_TAX_AMOUNT INTEGER,
  PROMISED_DATE DATE,
  GIFT_MESSAGE_TEXT VARCHAR(500),
  DELIVERY_INSTRUCTIONS_TEXT VARCHAR(500),
  TOTAL_PRODUCT_TAX_AMOUNT INTEGER,
  TOTAL_DELIVERY_CHARGE_AMOUNT INTEGER,
  DESCRIPTION VARCHAR(500) NOT NULL,
  GRAND_TOTAL_DELIVERY_AMOUNT INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  IS_GIFT BOOLEAN,
  TOTAL_DELIVERY_ADJUSTMENT_AMOUNT INTEGER,
  TOTAL_DELIVERY_TAX_AMOUNT INTEGER,
  TOTAL_TAX_AMOUNT INTEGER,
  TOTAL_DELIVERY_CHARGE_TAX_AMOUNT INTEGER,
  SALES_ORDER_DELIVERY_GROUP_NUMBER VARCHAR(500) NOT NULL,
  DESIRED_DELIVERY_DATE DATE,
  TOTAL_UNIT_PRICE_AMOUNT INTEGER NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_STATUS (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SEGMENT (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL (
  EXTERNAL_RECORD VARCHAR(500) NOT NULL,
  DESCRIPTION VARCHAR(500) NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  SALES_CHANNEL_NUMBER VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_BILL_TO_EMAIL_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_EMAIL_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CONTACT_POINT_EMAIL_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_EMAIL(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SHIP_TO_EMAIL_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_EMAIL_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CONTACT_POINT_EMAIL_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_EMAIL(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SALES_ORDER_CONFIRMATION_STATUS_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_CONFIRMATION_STATUS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SALES_ORDER_CONFIRMATION_STATUS_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CONFIRMATION_STATUS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SALES_ORDER_TYPE_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_TYPE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SALES_ORDER_TYPE_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_TYPE(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_METHOD_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  PAYMENT_METHOD_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD_ENTITY_GROUP.PAYMENT_METHOD(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SALES_ORDER_STATUS_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_STATUS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SALES_ORDER_STATUS_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_STATUS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_RENEWAL_TERM_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  RENEWAL_TERM_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(RENEWAL_TERM_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.RENEWAL_TERM(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_ORIGINAL_ORDER_JOIN (
  SALES_ORDER_ID_LEFT  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID_RIGHT VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID_LEFT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SALES_ORDER_ID_RIGHT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_BILL_TO_ACCOUNT_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  ACCOUNT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT_ENTITY_GROUP.ACCOUNT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_USER_DEVICE_SESSION_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  DEVICE_USER_SESSION_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(DEVICE_USER_SESSION_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.DEVICE_USER_SESSION(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SELLER_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  SELLER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SELLER_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.SELLER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_BILL_TO_ADDRESS_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_ADDRESS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CONTACT_POINT_ADDRESS_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_ADDRESS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SHIP_TO_ADDRESS_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_ADDRESS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CONTACT_POINT_ADDRESS_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_ADDRESS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_BILL_TO_CONTACT_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  ACCOUNT_CONTACT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(ACCOUNT_CONTACT_ID) REFERENCES ACCOUNT_ENTITY_GROUP.ACCOUNT_CONTACT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_INTERNAL_BUSINESS_UNIT_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  INTERNAL_BUSINESS_UNIT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(INTERNAL_BUSINESS_UNIT_ID) REFERENCES PARTY_ENTITY_GROUP.INTERNAL_BUSINESS_UNIT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SALES_CHANNEL_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  SALES_CHANNEL_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(SALES_CHANNEL_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_BILL_TO_PHONE_NUMBER_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_PHONE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CONTACT_POINT_PHONE_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_PHONE(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SOLD_TO_CUSTOMER_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  CUSTOMER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(CUSTOMER_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.CUSTOMER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_SHIP_TO_CONTACT_JOIN (
  SALES_ORDER_ID  VARCHAR(36) NOT NULL,
  ACCOUNT_CONTACT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID),
  FOREIGN KEY(ACCOUNT_CONTACT_ID) REFERENCES ACCOUNT_ENTITY_GROUP.ACCOUNT_CONTACT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_SUMMARY_SALES_ORDER_JOIN (
  SALES_ORDER_PAYMENT_SUMMARY_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PAYMENT_SUMMARY_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_SUMMARY(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_SUMMARY_PAYMENT_METHOD_JOIN (
  SALES_ORDER_PAYMENT_SUMMARY_ID  VARCHAR(36) NOT NULL,
  PAYMENT_METHOD_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PAYMENT_SUMMARY_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PAYMENT_SUMMARY(ID),
  FOREIGN KEY(PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD_ENTITY_GROUP.PAYMENT_METHOD(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SHIPPING_PHONE_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_PHONE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(CONTACT_POINT_PHONE_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_PHONE(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SALES_ORDER_PRODUCT_REASON_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_REASON_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_REASON_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_REASON(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_PRODUCT_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SALES_ORDER_PRODUCT_STATUS_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_STATUS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_STATUS_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_STATUS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SALES_ORDER_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SHIPPING_ADDRESS_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_ADDRESS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(CONTACT_POINT_ADDRESS_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_ADDRESS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_PRICE_BOOK_ENTRY_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  PRICE_BOOK_ENTRY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(PRICE_BOOK_ENTRY_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRICE_BOOK_ENTRY(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SHIPPING_EMAIL_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_EMAIL_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(CONTACT_POINT_EMAIL_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_EMAIL(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SUBSCRIPTION_TERM_UNIT_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  PRODUCT_VALIDITY_TIME_PERIOD_UO_M_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(PRODUCT_VALIDITY_TIME_PERIOD_UO_M_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_VALIDITY_TIME_PERIOD_UO_M(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_LIST_PRICE_TERM_UO_M_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  PRODUCT_VALIDITY_TIME_PERIOD_UO_M_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(PRODUCT_VALIDITY_TIME_PERIOD_UO_M_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_VALIDITY_TIME_PERIOD_UO_M(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SALES_ORDER_DELIVERY_GROUP_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_DELIVERY_GROUP_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_ORIGINAL_ORDER_PRODUCT_JOIN (
  SALES_ORDER_PRODUCT_ID_LEFT  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_ID_RIGHT VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID_LEFT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID_RIGHT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_SELLER_ACCOUNT_JOIN (
  SALES_ORDER_PRODUCT_ID  VARCHAR(36) NOT NULL,
  ACCOUNT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID),
  FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT_ENTITY_GROUP.ACCOUNT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRICE_ADJUSTMENT_SALES_ORDER_JOIN (
  SALES_ORDER_PRICE_ADJUSTMENT_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRICE_ADJUSTMENT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRICE_ADJUSTMENT(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_GROUP_SALES_ORDER_PRODUCT_GROUP_TYPE_JOIN (
  SALES_ORDER_PRODUCT_GROUP_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_GROUP_TYPE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_GROUP(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_GROUP_TYPE_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_GROUP_TYPE(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SAL_ORD_PRO_REA_SAL_ORD_PRO_REA_CAT_JOIN (
  SALES_ORDER_PRODUCT_REASON_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_REASON_CATEGORY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_REASON_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_REASON(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_REASON_CATEGORY_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_REASON_CATEGORY(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.ORDER_DELIVERY_METHOD_PRODUCT_JOIN (
  ORDER_DELIVERY_METHOD_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(ORDER_DELIVERY_METHOD_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.ORDER_DELIVERY_METHOD(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG_CHANGE_SALES_ORDER_JOIN (
  SALES_ORDER_CHANGE_LOG_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_CHANGE_LOG_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG_RELATED_SALES_ORDER_PRODUCT_JOIN (
  SALES_ORDER_CHANGE_LOG_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_CHANGE_LOG_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG_CHANGE_SALES_ORDER_PRODUCT_JOIN (
  SALES_ORDER_CHANGE_LOG_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_CHANGE_LOG_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG_RELATED_SALES_ORDER_JOIN (
  SALES_ORDER_CHANGE_LOG_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_CHANGE_LOG_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_CHANGE_LOG(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX_ORIGINAL_SALES_ORDER_PRODUCT_TAX_JOIN (
  SALES_ORDER_PRODUCT_TAX_ID_LEFT  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_TAX_ID_RIGHT VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_TAX_ID_LEFT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_TAX_ID_RIGHT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX_SALES_ORDER_PRODUCT_JOIN (
  SALES_ORDER_PRODUCT_TAX_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_PRODUCT_TAX_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT_TAX(ID),
  FOREIGN KEY(SALES_ORDER_PRODUCT_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_PRODUCT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_CONTACT_POINT_ADDRESS_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID  VARCHAR(36) NOT NULL,
  CONTACT_POINT_ADDRESS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(CONTACT_POINT_ADDRESS_ID) REFERENCES CONTACT_POINT_ENTITY_GROUP.CONTACT_POINT_ADDRESS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_SALES_ORDER_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(SALES_ORDER_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_SALES_ORDER_DELIVERY_STATUS_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID  VARCHAR(36) NOT NULL,
  SALES_ORDER_DELIVERY_STATUS_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(SALES_ORDER_DELIVERY_STATUS_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_STATUS(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_ORIGINAL_DELIVERY_GROUP_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID_LEFT  VARCHAR(36) NOT NULL,
  SALES_ORDER_DELIVERY_GROUP_ID_RIGHT VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID_LEFT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID_RIGHT) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_ORDER_DELIVERY_METHOD_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID  VARCHAR(36) NOT NULL,
  ORDER_DELIVERY_METHOD_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(ORDER_DELIVERY_METHOD_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.ORDER_DELIVERY_METHOD(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP_ACCOUNT_CONTACT_JOIN (
  SALES_ORDER_DELIVERY_GROUP_ID  VARCHAR(36) NOT NULL,
  ACCOUNT_CONTACT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_ORDER_DELIVERY_GROUP_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_ORDER_DELIVERY_GROUP(ID),
  FOREIGN KEY(ACCOUNT_CONTACT_ID) REFERENCES ACCOUNT_ENTITY_GROUP.ACCOUNT_CONTACT(ID)
);

CREATE TABLE SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL_SALES_CHANNEL_TYPE_JOIN (
  SALES_CHANNEL_ID  VARCHAR(36) NOT NULL,
  SALES_CHANNEL_TYPE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SALES_CHANNEL_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL(ID),
  FOREIGN KEY(SALES_CHANNEL_TYPE_ID) REFERENCES SALES_ORDER_ENTITY_GROUP.SALES_CHANNEL_TYPE(ID)
);