CREATE SCHEMA IF NOT EXISTS PRODUCT_ATTRIBUTE_ENTITY_GROUP;

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE (
  ATTRIBUTE_VALUE VARCHAR(500) NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.DEVICE_USER_SESSION (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_COLLATERAL (
  ID VARCHAR(36) UNIQUE NOT NULL,
  U_RL VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_TRANSLATION (
  ID VARCHAR(36) UNIQUE NOT NULL,
  TRANSLATED_NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_VALIDITY_TIME_PERIOD_UO_M (
  ID VARCHAR(36) UNIQUE NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  PLURAL_NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_SET (
  ID VARCHAR(36) UNIQUE NOT NULL,
  ATTRIBUTE_SET VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_VALUE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  CUSTOM_ATTRIBUTE_VALUE VARCHAR(500),
  NAME VARCHAR(500) NOT NULL,
  ATTRIBUTE_SET VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_SET_TRANSLATION (
  ID VARCHAR(36) UNIQUE NOT NULL,
  ATTRIBUTE_SET VARCHAR(500) NOT NULL,
  TRANSLATED_NAME VARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRICE_BOOK_ENTRY (
  MIN_REQUIRED_QUANTITY INTEGER,
  UNIT_LIST_PRICE INTEGER,
  MIN_REQUIRED_ORDER_VALUE INTEGER,
  IS_ACTIVE BOOLEAN,
  ID VARCHAR(36) UNIQUE NOT NULL,
  MAX_REQUIRED_ORDER_VALUE INTEGER,
  USE_STANDARD_PRICE BOOLEAN,
  SERVICE_PERIOD_COUNT INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE_TRANSLATION (
  TRANSLATED_ATTRIBUTE_VALUE VARCHAR(500) NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  TRANSLATED_ATTRIBUTE_VALUE_DESCRIPTION VARCHAR(500),
  PRIMARY KEY (ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_COLLATERAL_PRODUCT_JOIN (
  PRODUCT_COLLATERAL_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PRODUCT_COLLATERAL_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_COLLATERAL(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_SET_PRODUCT_JOIN (
  PRODUCT_ATTRIBUTE_SET_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PRODUCT_ATTRIBUTE_SET_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_SET(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_VALUE_PRODUCT_JOIN (
  PRODUCT_ATTRIBUTE_VALUE_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PRODUCT_ATTRIBUTE_VALUE_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_VALUE(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_VALUE_ATTRIBUTE_VALUE_JOIN (
  PRODUCT_ATTRIBUTE_VALUE_ID  VARCHAR(36) NOT NULL,
  ATTRIBUTE_VALUE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PRODUCT_ATTRIBUTE_VALUE_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRODUCT_ATTRIBUTE_VALUE(ID),
  FOREIGN KEY(ATTRIBUTE_VALUE_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRICE_BOOK_ENTRY_PRODUCT_JOIN (
  PRICE_BOOK_ENTRY_ID  VARCHAR(36) NOT NULL,
  PRODUCT_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PRICE_BOOK_ENTRY_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.PRICE_BOOK_ENTRY(ID),
  FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_ENTITY_GROUP.PRODUCT(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE_TRANSLATION_ATTRIBUTE_VALUE_JOIN (
  ATTRIBUTE_VALUE_TRANSLATION_ID  VARCHAR(36) NOT NULL,
  ATTRIBUTE_VALUE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(ATTRIBUTE_VALUE_TRANSLATION_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE_TRANSLATION(ID),
  FOREIGN KEY(ATTRIBUTE_VALUE_ID) REFERENCES PRODUCT_ATTRIBUTE_ENTITY_GROUP.ATTRIBUTE_VALUE(ID)
);